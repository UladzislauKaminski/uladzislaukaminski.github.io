{"version":3,"sources":["test-data/autocompletedata.ts","react-awesome-query-builder/ReactAwesomeQueryBuilder.tsx","react-query-builder/ReactQueryBuilder.tsx","App.tsx","index.tsx"],"names":["AutocompleteData","config","AntdConfig","fields","qty","label","type","fieldSettings","min","valueSources","preferWidgets","price","max","color","listValues","value","title","is_promotion","operators","queryValue","id","QbUtils","uuid","ReactAwesomeQueryBuilder","Component","constructor","arguments","state","tree","checkTree","loadTree","render","_jsxs","style","width","children","_jsx","Query","this","onChange","renderBuilder","margin","marginTop","padding","background","border","borderWidth","borderColor","borderRadius","renderResult","props","className","Builder","_ref","JSON","stringify","queryString","mongodbFormat","sqlFormat","jsonLogicFormat","setState","getTree","console","log","name","ReactQueryBuilder","query","setQuery","useState","combinator","rules","field","operator","_Fragment","QueryBuilder","onQueryChange","q","formatQuery","App","require","autocompleteProvider","useAutocompleteProvider","async","jqlFields","visibleFieldNames","jqlFunctions","visibleFunctionNames","authorResults","displayName","projectResults","sliceBegin","startIndex","url","indexOf","slice","results","onSearch","useCallback","jql","charStream","CharStreams","fromString","lexer","JQLLexer","tokenStream","CommonTokenStream","parsedJQLTree","JQLParser","jqlQuery","concat","String","prototype","startsWith","searchString","position","display","JQLEditor","analyticsSource","locale","target","href","boxShadow","src","rootElement","document","getElementById"],"mappings":"qNAAO,MAAMA,EAAmB,CAC9B,kBAAqB,CACjB,CACI,MAAS,SACT,YAAe,SACf,KAAQ,OACR,UAAa,OACb,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,SACA,KACA,UAEJ,MAAS,CACL,qBAGR,CACI,MAAS,UACT,YAAe,UACf,KAAQ,OACR,UAAa,OACb,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,SACA,KACA,UAEJ,MAAS,CACL,qBAGR,CACI,MAAS,gBACT,YAAe,gBACf,UAAa,OACb,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,SACA,KACA,SACA,IACA,KACA,IACA,MAEJ,MAAS,CACL,qBAGR,CACI,MAAS,UACT,YAAe,UACf,KAAQ,OACR,UAAa,OACb,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,SACA,KACA,UAEJ,MAAS,CACL,qBAGR,CACI,MAAS,YACT,YAAe,YACf,KAAQ,OACR,UAAa,OACb,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,SACA,KACA,UAEJ,MAAS,CACL,qBAGR,CACI,MAAS,oBACT,YAAe,oBACf,KAAQ,OACR,UAAa,OACb,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,SACA,KACA,UAEJ,MAAS,CACL,qBAGR,CACI,MAAS,kBACT,YAAe,kBACf,KAAQ,OACR,UAAa,OACb,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,SACA,KACA,UAEJ,MAAS,CACL,qBAGR,CACI,MAAS,gBACT,YAAe,gBACf,KAAQ,OACR,UAAa,OACb,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,SACA,KACA,UAEJ,MAAS,CACL,qBAGR,CACI,MAAS,YACT,YAAe,YACf,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,UAEJ,MAAS,CACL,qBAGR,CACI,MAAS,aACT,YAAe,aACf,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,UAEJ,MAAS,CACL,qBAGR,CACI,MAAS,WACT,YAAe,WACf,KAAQ,OACR,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,SACA,KACA,UAEJ,MAAS,CACL,+CAGR,CACI,MAAS,sBACT,YAAe,sBACf,KAAQ,OACR,UAAa,OACb,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,SACA,KACA,UAEJ,MAAS,CACL,qBAGR,CACI,MAAS,iBACT,YAAe,iBACf,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,UAEJ,MAAS,CACL,qBAGR,CACI,MAAS,sBACT,YAAe,sBACf,UAAa,OACb,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,SACA,KACA,SACA,IACA,KACA,IACA,MAEJ,MAAS,CACL,qBAGR,CACI,MAAS,sBACT,YAAe,sBACf,KAAQ,OACR,UAAa,OACb,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,SACA,KACA,UAEJ,MAAS,CACL,qBAGR,CACI,MAAS,qBACT,YAAe,qBACf,KAAQ,OACR,UAAa,OACb,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,SACA,KACA,UAEJ,MAAS,CACL,qBAGR,CACI,MAAS,UACT,YAAe,UACf,UAAa,OACb,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,SACA,KACA,SACA,IACA,KACA,IACA,MAEJ,MAAS,CACL,mBAGR,CACI,MAAS,mBACT,YAAe,mBACf,KAAQ,OACR,UAAa,OACb,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,SACA,KACA,UAEJ,MAAS,CACL,qBAGR,CACI,MAAS,cACT,YAAe,cACf,UAAa,OACb,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,SACA,KACA,SACA,IACA,KACA,IACA,MAEJ,MAAS,CACL,mBAGR,CACI,MAAS,UACT,YAAe,UACf,KAAQ,OACR,UAAa,OACb,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,SACA,KACA,UAEJ,MAAS,CACL,4CAGR,CACI,MAAS,4BACT,YAAe,4BACf,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,UAEJ,MAAS,CACL,qBAGR,CACI,MAAS,4BACT,YAAe,4BACf,WAAc,OACd,UAAa,CACT,IACA,KACA,KACA,UAEJ,MAAS,CACL,qBAGR,CACI,MAAS,iBACT,Y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","file":"static/js/main.10a6a828.chunk.js","sourcesContent":["export const AutocompleteData = {\r\n  \"visibleFieldNames\": [\r\n      {\r\n          \"value\": \"author\",\r\n          \"displayName\": \"author\",\r\n          \"auto\": \"true\",\r\n          \"orderable\": \"true\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"=\",\r\n              \"!=\",\r\n              \"in\",\r\n              \"not in\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"manager\",\r\n          \"displayName\": \"manager\",\r\n          \"auto\": \"true\",\r\n          \"orderable\": \"true\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"=\",\r\n              \"!=\",\r\n              \"in\",\r\n              \"not in\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"todoListItems\",\r\n          \"displayName\": \"todoListItems\",\r\n          \"orderable\": \"true\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"=\",\r\n              \"!=\",\r\n              \"in\",\r\n              \"not in\",\r\n              \"is\",\r\n              \"is not\",\r\n              \"<\",\r\n              \"<=\",\r\n              \">\",\r\n              \">=\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.Number\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"project\",\r\n          \"displayName\": \"project\",\r\n          \"auto\": \"true\",\r\n          \"orderable\": \"true\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"=\",\r\n              \"!=\",\r\n              \"in\",\r\n              \"not in\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"tasksKeys\",\r\n          \"displayName\": \"tasksKeys\",\r\n          \"auto\": \"true\",\r\n          \"orderable\": \"true\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"=\",\r\n              \"!=\",\r\n              \"in\",\r\n              \"not in\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"atlasGoalStatuses\",\r\n          \"displayName\": \"atlasGoalStatuses\",\r\n          \"auto\": \"true\",\r\n          \"orderable\": \"true\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"=\",\r\n              \"!=\",\r\n              \"in\",\r\n              \"not in\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"atlasProjectKey\",\r\n          \"displayName\": \"atlasProjectKey\",\r\n          \"auto\": \"true\",\r\n          \"orderable\": \"true\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"=\",\r\n              \"!=\",\r\n              \"in\",\r\n              \"not in\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"projectStatus\",\r\n          \"displayName\": \"projectStatus\",\r\n          \"auto\": \"true\",\r\n          \"orderable\": \"true\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"=\",\r\n              \"!=\",\r\n              \"in\",\r\n              \"not in\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"buildName\",\r\n          \"displayName\": \"buildName\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"~\",\r\n              \"!~\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"buildState\",\r\n          \"displayName\": \"buildState\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"~\",\r\n              \"!~\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"category\",\r\n          \"displayName\": \"category\",\r\n          \"auto\": \"true\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"=\",\r\n              \"!=\",\r\n              \"in\",\r\n              \"not in\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"com.atlassian.jira.project.ProjectCategory\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"change-control-type\",\r\n          \"displayName\": \"change-control-type\",\r\n          \"auto\": \"true\",\r\n          \"orderable\": \"true\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"=\",\r\n              \"!=\",\r\n              \"in\",\r\n              \"not in\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"checklistItems\",\r\n          \"displayName\": \"checklistItems\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"~\",\r\n              \"!~\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"checklistItemsCount\",\r\n          \"displayName\": \"checklistItemsCount\",\r\n          \"orderable\": \"true\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"=\",\r\n              \"!=\",\r\n              \"in\",\r\n              \"not in\",\r\n              \"is\",\r\n              \"is not\",\r\n              \"<\",\r\n              \"<=\",\r\n              \">\",\r\n              \">=\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.Number\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"commentVisibleGroup\",\r\n          \"displayName\": \"commentVisibleGroup\",\r\n          \"auto\": \"true\",\r\n          \"orderable\": \"true\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"=\",\r\n              \"!=\",\r\n              \"in\",\r\n              \"not in\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"commentVisibleRole\",\r\n          \"displayName\": \"commentVisibleRole\",\r\n          \"auto\": \"true\",\r\n          \"orderable\": \"true\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"=\",\r\n              \"!=\",\r\n              \"in\",\r\n              \"not in\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"created\",\r\n          \"displayName\": \"created\",\r\n          \"orderable\": \"true\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"=\",\r\n              \"!=\",\r\n              \"in\",\r\n              \"not in\",\r\n              \"is\",\r\n              \"is not\",\r\n              \"<\",\r\n              \"<=\",\r\n              \">\",\r\n              \">=\"\r\n          ],\r\n          \"types\": [\r\n              \"java.util.Date\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"createdByEmailId\",\r\n          \"displayName\": \"createdByEmailId\",\r\n          \"auto\": \"true\",\r\n          \"orderable\": \"true\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"=\",\r\n              \"!=\",\r\n              \"in\",\r\n              \"not in\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"createdDate\",\r\n          \"displayName\": \"createdDate\",\r\n          \"orderable\": \"true\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"=\",\r\n              \"!=\",\r\n              \"in\",\r\n              \"not in\",\r\n              \"is\",\r\n              \"is not\",\r\n              \"<\",\r\n              \"<=\",\r\n              \">\",\r\n              \">=\"\r\n          ],\r\n          \"types\": [\r\n              \"java.util.Date\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"creator\",\r\n          \"displayName\": \"creator\",\r\n          \"auto\": \"true\",\r\n          \"orderable\": \"true\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"=\",\r\n              \"!=\",\r\n              \"in\",\r\n              \"not in\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"com.atlassian.jira.user.ApplicationUser\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"deploymentEnvironmentName\",\r\n          \"displayName\": \"deploymentEnvironmentName\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"~\",\r\n              \"!~\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"deploymentEnvironmentType\",\r\n          \"displayName\": \"deploymentEnvironmentType\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"~\",\r\n              \"!~\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"deploymentName\",\r\n          \"displayName\": \"deploymentName\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"~\",\r\n              \"!~\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"deploymentState\",\r\n          \"displayName\": \"deploymentState\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"~\",\r\n              \"!~\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"flagEnabled\",\r\n          \"displayName\": \"flagEnabled\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"~\",\r\n              \"!~\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"flagKey\",\r\n          \"displayName\": \"flagKey\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"~\",\r\n              \"!~\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"flagName\",\r\n          \"displayName\": \"flagName\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"~\",\r\n              \"!~\",\r\n              \"is\",\r\n              \"is not\"\r\n          ],\r\n          \"types\": [\r\n              \"java.lang.String\"\r\n          ]\r\n      },\r\n      {\r\n          \"value\": \"id\",\r\n          \"displayName\": \"id\",\r\n          \"orderable\": \"true\",\r\n          \"searchable\": \"true\",\r\n          \"operators\": [\r\n              \"=\",\r\n              \"!=\",\r\n              \"in\",\r\n              \"not in\",\r\n              \"<\",\r\n              \"<=\",\r\n              \">\",\r\n              \">=\"\r\n          ],\r\n          \"types\": [\r\n              \"com.atlassian.jira.issue.Issue\"\r\n          ]\r\n      }\r\n  ],\r\n  \"visibleFunctionNames\": [\r\n  ]\r\n}","import {Component} from 'react';\r\nimport {Query, Builder, Utils as QbUtils, ValueSource, ImmutableTree, BasicConfig} from 'react-awesome-query-builder';\r\n\r\n// For AntDesign widgets only:\r\nimport AntdConfig from 'react-awesome-query-builder/lib/config/antd';\r\nimport 'antd/dist/antd.css';\r\nimport 'react-awesome-query-builder/lib/css/styles.css';\r\nimport 'react-awesome-query-builder/lib/css/compact_styles.css'; //optional, for more compact styles\r\nimport { JsonSwitchGroup } from 'react-awesome-query-builder/lib';\r\n\r\n// Choose your skin (ant/material/vanilla):\r\nconst InitialConfig = AntdConfig; // or MaterialConfig or MuiConfig or BootstrapConfig or BasicConfig\r\n\r\n// You need to provide your own config. See below 'Config format'\r\nconst config = {\r\n  ...InitialConfig,\r\n  fields: {\r\n    qty: {\r\n        label: 'Qty',\r\n        type: 'number',\r\n        fieldSettings: {\r\n            min: 0,\r\n        },\r\n        valueSources: ['value'],\r\n        preferWidgets: ['number'],\r\n    },\r\n    price: {\r\n        label: 'Price',\r\n        type: 'number',\r\n        valueSources: ['value'],\r\n        fieldSettings: {\r\n            min: 10,\r\n            max: 100,\r\n        },\r\n        preferWidgets: ['slider', 'rangeslider'],\r\n    },\r\n    color: {\r\n        label: 'Color',\r\n        type: 'select',\r\n        valueSources: ['value'],\r\n        fieldSettings: {\r\n          listValues: [\r\n            { value: 'yellow', title: 'Yellow' },\r\n            { value: 'green', title: 'Green' },\r\n            { value: 'orange', title: 'Orange' }\r\n          ],\r\n        }\r\n    },\r\n    is_promotion: {\r\n        label: 'Promo?',\r\n        type: 'boolean',\r\n        operators: ['equal'],\r\n        valueSources: ['value'],\r\n    },\r\n  }\r\n};\r\n\r\n// You can load query value from your backend storage (for saving see `Query.onChange()`)\r\nconst queryValue = {id: QbUtils.uuid(), type: \"group\"};\r\n\r\n\r\nexport class ReactAwesomeQueryBuilder extends Component {\r\n    state = {\r\n      tree: QbUtils.checkTree(QbUtils.loadTree(queryValue), config),\r\n      config: config\r\n    };\r\n    \r\n    render = () => (\r\n      <div style={{ width: 800 }}>\r\n        <Query\r\n            {...config} \r\n            value={this.state.tree}\r\n            onChange={this.onChange}\r\n            renderBuilder={this.renderBuilder}\r\n        />\r\n        <div style={{margin: 25, marginTop: 0, padding: 10, width: 600, background: '#fcf7e8', border: 'solid', borderWidth: 1, borderColor: '#DCC896', borderRadius: '5px'}}>\r\n          {this.renderResult(this.state)}\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n    renderBuilder = (props: any) => (\r\n      <div className=\"query-builder-container\" style={{padding: '10px'}}>\r\n        <div className=\"query-builder\">\r\n            <Builder {...props} />\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n    renderResult = ({tree, config}: { tree: ImmutableTree, config: BasicConfig }) => (\r\n      <div className=\"query-builder-result\">\r\n          <div>Пример того, что можем отдавать бэкенду:</div><hr />\r\n          <div>Query string: <pre>{JSON.stringify(QbUtils.queryString(tree, config))}</pre></div>\r\n          <div>MongoDb query: <pre>{JSON.stringify(QbUtils.mongodbFormat(tree, config))}</pre></div>\r\n          <div>SQL where: <pre>{JSON.stringify(QbUtils.sqlFormat(tree, config))}</pre></div>\r\n          <div>JsonLogic: <pre>{JSON.stringify(QbUtils.jsonLogicFormat(tree, config))}</pre></div>\r\n      </div>\r\n    )\r\n    \r\n    onChange = (tree: ImmutableTree, config: BasicConfig) => {\r\n      // Tip: for better performance you can apply `throttle` - see `examples/demo`\r\n      this.setState({tree, config});\r\n\r\n      const jsonTree = QbUtils.getTree(tree);\r\n      console.log(tree, config);\r\n      // `jsonTree` can be saved to backend, and later loaded to `queryValue`\r\n    }\r\n}","import { useState } from 'react';\r\nimport { Field, formatQuery, QueryBuilder, RuleGroupType } from 'react-querybuilder';\r\nimport 'react-querybuilder/dist/query-builder.css';\r\n\r\nconst fields: Field[] = [\r\n  { name: 'firstName', label: 'First Name' },\r\n  { name: 'lastName', label: 'Last Name' },\r\n];\r\n\r\nexport default function ReactQueryBuilder() {\r\n  const [query, setQuery] = useState<RuleGroupType>({\r\n    combinator: 'and',\r\n    rules: [\r\n      { field: 'firstName', operator: 'beginsWith', value: 'Stev' },\r\n      { field: 'lastName', operator: 'in', value: 'Vai,Vaughan' },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div style={{ width: 800 }}>\r\n        <QueryBuilder fields={fields} query={query} onQueryChange={q => setQuery(q)} />\r\n        <br /><hr/>\r\n        <h4>\r\n          SQL as result of <code>formatQuery(query, 'sql')</code>:\r\n        </h4>\r\n        <pre>{formatQuery(query, 'sql')}</pre>\r\n        <hr/>\r\n      </div>\r\n    </>\r\n  );\r\n};","import { useCallback } from \"react\";\r\nimport { JQLEditorAsync as JQLEditor } from \"@atlassianlabs/jql-editor\";\r\nimport { useAutocompleteProvider } from \"@atlassianlabs/jql-editor-autocomplete-rest\";\r\nimport { AutocompleteData } from \"./test-data/autocompletedata\";\r\nimport { JQLFieldValueResponse } from \"@atlassianlabs/jql-editor-autocomplete-rest/dist/types/common/types\";\r\nimport { CharStreams, CommonTokenStream } from 'antlr4ts';\r\nimport { JQLLexer, JQLParser } from '@atlassianlabs/jql-parser';\r\nimport { ReactAwesomeQueryBuilder } from \"./react-awesome-query-builder/ReactAwesomeQueryBuilder\";\r\nimport ReactQueryBuilder from \"./react-query-builder/ReactQueryBuilder\";\r\n\r\nexport default function App() {\r\n  require('./App.css');\r\n\r\n  const getInitialData = async (url: string) => {\r\n    /* Request Initial data for autocomplete */\r\n    // const response = await fetch(url);\r\n    // const data: any = response.json();\r\n    const data = AutocompleteData;\r\n\r\n    return {\r\n      jqlFields: data.visibleFieldNames,\r\n      jqlFunctions: data.visibleFunctionNames,\r\n    };\r\n  };\r\n\r\n  const getSuggestions = async (url: string) => {\r\n    /* Request for Suggestions */\r\n    // const response = await fetch(url);\r\n    // return response.json();\r\n    \r\n    const authorResults: JQLFieldValueResponse[] = [\r\n      { value: \"\\\"Anatoly\\\"\", displayName: \"Anatoly\" },\r\n      { value: \"\\\"Vladimir\\\"\", displayName: \"Vladimir\" },\r\n      { value: \"\\\"Uladzislau\\\"\", displayName: \"Uladzislau\" },\r\n      { value: \"\\\"Zinaida\\\"\", displayName: \"Zinaida\" },\r\n    ];\r\n\r\n    const projectResults: JQLFieldValueResponse[] = [\r\n      { value: \"\\\"AIBUY\\\"\", displayName: \"AIBUY\" },\r\n      { value: \"\\\"EAGLE\\\"\", displayName: \"EAGLE\" },\r\n      { value: \"\\\"INTERNAL\\\"\", displayName: \"INTERNAL\" },\r\n    ];\r\n\r\n    const sliceBegin = 'fieldName=';\r\n    const startIndex = url.indexOf(sliceBegin) + sliceBegin.length;\r\n    const fieldName = url.slice(startIndex, url.indexOf('&'));\r\n    switch (fieldName) {\r\n      case 'author':\r\n        return { results: authorResults };\r\n      case 'project':\r\n        return { results: projectResults };\r\n      default:\r\n        return { results: [] };\r\n    }\r\n  };\r\n\r\n  const autocompleteProvider = useAutocompleteProvider(\r\n    \"my-app\",\r\n    getInitialData,\r\n    getSuggestions\r\n  );\r\n\r\n  const onSearch = useCallback((jql: string) => {\r\n    // FOR BACKAND - to get JqlQueryContext\r\n    const charStream = CharStreams.fromString(jql);\r\n    const lexer = new JQLLexer(charStream);\r\n    const tokenStream = new CommonTokenStream(lexer);\r\n    const parser = new JQLParser(tokenStream);\r\n    const parsedJQLTree = parser.jqlQuery();\r\n    console.log(`Запрос JQL: ${jql}; объект для обработки:`, parsedJQLTree)\r\n  }, []);\r\n\r\n  String.prototype.startsWith = function (searchString, position) {\r\n    position = position || 0;\r\n    return this.indexOf(searchString, position) === position;\r\n  };\r\n\r\n  return (\r\n    <div className=\"contnet\">\r\n      <h1>Формирование запросов с фронтенда (как в джире)</h1>\r\n      <div style={{display: \"none\"}}>\r\n          <JQLEditor\r\n            analyticsSource={\"my-app\"}\r\n            query={\"\"}\r\n            onSearch={onSearch}\r\n            autocompleteProvider={autocompleteProvider}\r\n            locale={\"en\"}\r\n          />\r\n        </div>\r\n      <hr />\r\n      <section>\r\n        <h2>1.Использовать библиотеки от разработчиков джиры - <i>@atlassianlabs/jql-editor</i></h2>\r\n        <p>Нужно просмотреть и реализовать библиотеки от <i>@atlassianlabs</i> / <i>@atlaskit</i>.<br/>Рабочий пример с тестовыми данными для полей <b>author</b> и <b>project</b>:</p>\r\n\r\n        <div className=\"jql-editor\">\r\n          <JQLEditor\r\n            analyticsSource={\"my-app\"}\r\n            query={\"\"}\r\n            onSearch={onSearch}\r\n            autocompleteProvider={autocompleteProvider}\r\n            locale={\"en\"}\r\n          />\r\n        </div>\r\n      <p>Особенности:</p>\r\n      <ul>\r\n        <li><b>+</b> Быстрое подключение на фронтенде</li>\r\n        <li><b>+</b> Не нужно реализовывать обработку ошибок</li>\r\n        <li><b>+</b> Огромная база подсказок</li>\r\n        <li><b>-</b> Ограниченая кастомизация</li>\r\n        <li><b>-</b> Могут возникнуть проблемы совместимости с новыми версиями реакта(16.8 max), возможно придется устанавливать модули с флагом <i>--legacy-peer-deps</i></li>\r\n        <li><b>-</b> Придется писать бэкенд под формат библиотеки. Либо подгонять свои данные под библиотеку на фронте</li>\r\n      </ul>\r\n      <p>Для бэкенда:\r\n        <ul>\r\n          <li><a target=\"_blank\" href=\"https://docs.atlassian.com/software/jira/docs/api/REST/8.9.0/#api/2/jql/autocompletedata\">Смотрите схемы <i>/rest/api/2/jql/autocompletedata</i>, <i>/rest/api/2/jql/autocompletedata/suggestions</i></a></li>\r\n          <li><a target=\"_blank\" href=\"https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-jql/#api-rest-api-3-jql-autocompletedata-get\">Дока autocompletedata</a></li>\r\n          <li><a target=\"_blank\" href=\"https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-jql/#api-rest-api-3-jql-autocompletedata-suggestions-get\">Дока suggestions</a></li>\r\n        </ul>\r\n      </p>\r\n      <p>Ссылки:\r\n        <ul>\r\n          <li><a target=\"_blank\" href=\"https://atlaskit.atlassian.com/packages/jql/jql-editor\">Доки jql-editor</a></li>\r\n          <li><a target=\"_blank\" href=\"https://atlaskit.atlassian.com/packages/jql/jql-autocomplete\">Доки jql-autocomplete</a></li>\r\n          <li><a target=\"_blank\" href=\"https://atlaskit.atlassian.com/packages/jql/jql-editor-autocomplete-rest\">Доки jql-editor-autocomplete-rest</a></li>\r\n          <li><a target=\"_blank\" href=\"https://docs.atlassian.com/software/jira/docs/api/REST/8.9.0/#api/2-getAllPermissions\">Jira Server platform REST API reference</a></li>\r\n        </ul>\r\n      </p>\r\n      <p>Лицензия @atlassianlabs / @atlaskit: \r\n        <a target=\"_blank\" href=\"https://www.apache.org/licenses/LICENSE-2.0\"> APACHE LICENSE, VERSION 2.0</a><br/>\r\n        <span>Бесплатна как для коммерческого, так и для некоммерческого использования. Единственное требование - необходимо поместить следующие файлы в корневую директорию:</span><br />\r\n        <span>LICENSE — файл, содержащий копию текста лицензии Apache;</span>\r\n        <span> NOTICE — текстовый файл, перечисляющий все библиотеки, лицензированные под лицензией Apache вместе с именами их создателей.</span>\r\n      </p>\r\n      </section>\r\n\r\n      <section className=\"section\">\r\n        <h2>2.Использовать библиотеку <i>react-awesome-query-builder</i></h2>\r\n        <p>Библиотека для React основанная на jQuery QueryBuilder</p>\r\n        <div>\r\n          <ReactAwesomeQueryBuilder/>\r\n        </div>\r\n      <p>Особенности:</p>\r\n      <ul>\r\n        <li><b>+</b> Интуитивно понятен</li>\r\n        <li><b>+</b> Простая имплементация на фронтенде и хорошая возможность кастомизаций</li>\r\n        <li><b>+</b> Есть парсеры для бэкенда</li>\r\n        <li><b>-</b> Массивный интерфейс, если запрос сложный</li>\r\n        <li><b>-</b> Долгое составление запроса из-за необходимости взаимодействия с интерфейсом</li>\r\n      </ul>\r\n      <p>Ссылки:\r\n        <ul>\r\n          <li><a target=\"_blank\" href=\"https://github.com/ukrbublik/react-awesome-query-builder/pkgs/npm/react-awesome-query-builder\">Библиотека и дока</a></li>\r\n          <li><a target=\"_blank\" href=\"https://ukrbublik.github.io/react-awesome-query-builder/\">Развернутый пример</a></li>\r\n          <li><a target=\"_blank\" href=\"https://querybuilder.js.org/index.html\">jQuery QueryBuilder</a></li>\r\n          <li><a target=\"_blank\" href=\"https://github.com/ukrbublik/react-awesome-query-builder/blob/master/CONFIG.adoc\">Конфиг</a></li>\r\n        </ul>\r\n      </p>\r\n      <p>Лицензия react-awesome-query-builder:\r\n        <a target=\"_blank\" href=\"https://opensource.org/license/mit/\"> MIT</a><br/>\r\n        <span>Бесплатна как для коммерческого, так и для некоммерческого использования. Без ограничений и требований.</span>\r\n      </p>\r\n      </section>\r\n\r\n\r\n      <section className=\"section\">\r\n        <h2>3.Использовать библиотеку <i>react-querybuilder</i></h2>\r\n        <p>Библиотека аналогичная предыдущей - альтернатива</p>\r\n        <div>\r\n          <ReactQueryBuilder/>\r\n        </div>\r\n      <p><a target=\"_blank\" href=\"https://react-querybuilder.js.org/\">Ссылка</a></p>\r\n      <p>Лицензия react-querybuilder:\r\n        <a target=\"_blank\" href=\"https://opensource.org/license/mit/\"> MIT</a><br/>\r\n        <span>Бесплатна как для коммерческого, так и для некоммерческого использования. Без ограничений и требований.</span>\r\n      </p>\r\n      </section>\r\n\r\n      \r\n\r\n      <section className=\"section\">\r\n        <h2>4.Переделать  <i>Angular-Autocomplete-QueryBuilder</i> под React</h2>\r\n        <p>Имплементация для Angular - взять пример и переделать под реакт, либо создать из этого репозитория внешнюю библиотеку со своим интерфейсом и встраивать в нужное приложение</p>\r\n        <div>\r\n          <img style={{width: 800, boxShadow: '0 0 5px black'}} src=\"https://raw.githubusercontent.com/Technosaviour/Angular-Autocomplete-QueryBuilder/master/Demo.gif\"/>\r\n        </div>\r\n      <p>Особенности:</p>\r\n      <ul>\r\n        <li><b>+</b> Свобода в кастомизации, подстройка под индивидуальные необходимости конкретного проекта</li>\r\n        <li><b>-</b> Незаконченное решение - требует дороботок</li>\r\n      </ul>\r\n      <p><a target=\"_blank\" href=\"https://github.com/Technosaviour/Angular-Autocomplete-QueryBuilder\">Ссылка на репозиторий</a></p>\r\n      <p>Лицензия Angular-Autocomplete-QueryBuilder:\r\n        <a target=\"_blank\" href=\"https://opensource.org/license/mit/\"> MIT</a><br/>\r\n        <span>Бесплатна как для коммерческого, так и для некоммерческого использования. Без ограничений и требований.</span>\r\n      </p>\r\n      </section>\r\n\r\n\r\n\r\n      <section className=\"section\">\r\n        <h2>5.Использовать <i>odata-query</i> библиотеку (или подобные) для генерации запроса</h2>\r\n        <p>JS Библиотеки основанная на jQuery QueryBuilder</p>\r\n        <div>\r\n          <img style={{width: 600, boxShadow: '0 0 5px black'}} src=\"https://i.ibb.co/sj1QDqy/odata.png\"/>\r\n        </div>\r\n      <p>Особенности:</p>\r\n      <ul>\r\n        <li><b>+</b> Упрощают создание запросов перед отправкой на бэкэнд</li>\r\n        <li><b>-</b> Не имеет графичского интерфейса</li>\r\n      </ul>\r\n      <p>Ссылки:\r\n        <ul>\r\n          <li><a target=\"_blank\" href=\"https://www.npmjs.com/package/odata-query\">odata-query</a></li>\r\n          <li><a target=\"_blank\" href=\"https://www.npmjs.com/package/@odata2ts/odata-query-builder\">odata-query-builder</a></li>\r\n        </ul>\r\n      </p>\r\n      <p>Лицензия odata-query и odata-query-builder:\r\n        <a target=\"_blank\" href=\"https://opensource.org/license/mit/\"> MIT</a><br/>\r\n        <span>Бесплатна как для коммерческого, так и для некоммерческого использования. Без ограничений и требований.</span>\r\n      </p>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import { render } from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}